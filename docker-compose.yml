version: '3.8'

services:
  # Aplicación principal Django + React
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=True
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
      - DATABASE_URL=sqlite:///db.sqlite3
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - .env.docker.${environment:-dev}
    depends_on:
      - redis
    networks:
      - agencia_network

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - agencia_network

  # Servidor MCP para GitHub
  mcp-github:
    image: python:3.11-slim
    command: >
      sh -c "
        pip install git+https://github.com/microsoft/mcp-server-github.git &&
        python -m mcp_server_github --host 0.0.0.0 --port 3001
      "
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    ports:
      - "3001:3001"
    networks:
      - agencia_network

  # Servidor MCP para sistema de archivos
  mcp-filesystem:
    image: python:3.11-slim
    command: >
      sh -c "
        pip install git+https://github.com/microsoft/mcp-server-filesystem.git &&
        python -m mcp_server_filesystem --host 0.0.0.0 --port 3002 --root /app/workspace
      "
    volumes:
      - ./workspace:/app/workspace
      - .:/app/project:ro
    ports:
      - "3002:3002"
    networks:
      - agencia_network

  # Servidor MCP para tiempo
  mcp-time:
    image: python:3.11-slim
    command: >
      sh -c "
        pip install mcp-server-time &&
        python -m mcp_server_time
      "
    ports:
      - "3003:3003"
    networks:
      - agencia_network

  # Nginx para servir archivos estáticos en producción
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
      - media_volume:/media
    depends_on:
      - web
    networks:
      - agencia_network

volumes:
  static_volume:
  media_volume:
  redis_data:

networks:
  agencia_network:
    driver: bridge
